suite: test deployment
templates:
  - templates/deployment.yaml

release:
  name: release

tests:
  - it: adds METRIC_API_URL when nrStaging is true.
    set:
      licenseKey: fakeLicense
      cluster: test
      nrStaging: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: "METRIC_API_URL"
            value: "https://staging-metric-api.newrelic.com/metric/v1/infra"

  - it: adds FedRamp endpoint when FedRamp is enabled.
    set:
      licenseKey: fakeLicense
      cluster: test
      fedramp: 
        enabled: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: "METRIC_API_URL"
            value: "https://gov-metric-api.newrelic.com/metric/v1"

  - it: adds proxy when enabled.
    set:
      licenseKey: fakeLicense
      cluster: test
      proxy: "https://my-proxy:9999"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: "EMITTER_PROXY"
            value: "https://my-proxy:9999"

  - it: adds pod labels selectors.
    set:
      licenseKey: fakeLicense
      cluster: test
    asserts:
      - equal:
          path: spec.selector.matchLabels
          value: 
            app.kubernetes.io/instance: release
            app.kubernetes.io/name: nri-prometheus
  
  - it: adds pod security context if specified in values.
    set:
      licenseKey: fakeLicense
      cluster: test
      podSecurityContext:
        foo: bar
    asserts:
      - equal:
          path: spec.template.spec.securityContext
          value: 
            foo: bar
  
  - it: adds securityContext if specified in values.
    set:
      licenseKey: fakeLicense
      cluster: test
      containerSecurityContext:
        foo: bar
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            foo: bar

  - it: proper set image sub values.
    set:
      licenseKey: fakeLicense
      cluster: test
      image:
        repository: foo/bar
        tag: baz
        pullSecrets:
          - name: secret
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets
          value:
            - name: secret
      - equal:
          path: spec.template.spec.containers[0].image
          value: foo/bar:baz

  - it: set priorityClassName.
    set:
      licenseKey: fakeLicense
      cluster: test
      priorityClassName: foo
    asserts:
      - equal:
          path: spec.template.spec.priorityClassName
          value: foo
